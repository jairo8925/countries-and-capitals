{"version":3,"sources":["apis/countries.js","components/CountryItem.js","components/CountryList.js","components/Map.js","components/LoadingScreen.js","sounds/correct.wav","sounds/wrong.wav","components/Game.js","components/App.js","index.js"],"names":["axios","create","baseURL","CountryItem","country","onCountryClick","option","className","onClick","name","alt","src","flag","CountryList","countries","Map","info","population","Number","toLocaleString","lat","latlng","long","region","subregion","languages","map","i","join","currencies","corner1","L","latLng","corner2","bounds","latLngBounds","MapContainer","center","zoom","doubleClickZoom","touchZoom","zoomSnap","zoomDelta","trackResize","scrollWheelZoom","maxBoundsViscosity","maxBounds","TileLayer","url","attribution","Marker","position","keepInView","autoPan","Popup","LoadingScreen","props","message","defaultProps","Game","state","capitalCity","options","answer","score","countryInfo","Audio","correctSoundEffect","play","audio","wrongSoundEffect","volume","setState","setCountries","chooseCountries","Math","floor","random","length","capital","index","indexOf","splice","a","countriesService","get","params","fields","response","this","data","filter","item","arr","n","result","Array","len","taken","RangeError","x","style","paddingTop","city","React","Component","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e54d92bf.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://restcountries.eu/rest/v2',\r\n});\r\n","import './CountryItem.css';\r\nimport React from 'react';\r\n\r\nconst CountryItem = ({ country, onCountryClick, option }) => {\r\n  return (\r\n    <div className=\"eight wide column center aligned\">\r\n      <div\r\n        className=\"ui huge segment country noselect\"\r\n        onClick={() => onCountryClick(option)}\r\n      >\r\n        {country.name}\r\n        <img\r\n          className=\"flag\"\r\n          alt={`Flag of ${country.name}`}\r\n          src={country.flag}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryItem;\r\n","import React from 'react';\r\nimport CountryItem from './CountryItem';\r\n\r\nconst CountryList = ({ countries, onCountryClick }) => {\r\n  return (\r\n    <div className=\"ui two centered grid\">\r\n      <div className=\"sixteen column centered row\">\r\n        <CountryItem\r\n          country={countries[0]}\r\n          onCountryClick={onCountryClick}\r\n          option={0}\r\n        />\r\n        <CountryItem\r\n          country={countries[1]}\r\n          onCountryClick={onCountryClick}\r\n          option={1}\r\n        />\r\n      </div>\r\n      <div className=\"sixteen column centered row\">\r\n        <CountryItem\r\n          country={countries[2]}\r\n          onCountryClick={onCountryClick}\r\n          option={2}\r\n        />\r\n        <CountryItem\r\n          country={countries[3]}\r\n          onCountryClick={onCountryClick}\r\n          option={3}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryList;\r\n","import './Map.css';\r\nimport React from 'react';\r\nimport { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet';\r\nimport L from 'leaflet';\r\n\r\nconst Map = ({ info }) => {\r\n  const population = Number(info.population).toLocaleString();\r\n  const lat = Number(info.latlng[0]);\r\n  const long = Number(info.latlng[1]);\r\n  const region = info.subregion;\r\n  const languages = info.languages\r\n    .map((i) => {\r\n      return i.name;\r\n    })\r\n    .join(', ');\r\n  const currencies = info.currencies\r\n    .map((i) => {\r\n      return i.name;\r\n    })\r\n    .join(', ');\r\n\r\n  const corner1 = L.latLng(-90, -200);\r\n  const corner2 = L.latLng(90, 200);\r\n  const bounds = L.latLngBounds(corner1, corner2);\r\n  const url = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\r\n\r\n  return (\r\n    <MapContainer\r\n      center={[5, 0]}\r\n      zoom={2}\r\n      doubleClickZoom={false}\r\n      touchZoom={false}\r\n      zoomSnap={false}\r\n      zoomDelta={false}\r\n      trackResize={false}\r\n      scrollWheelZoom={false}\r\n      maxBoundsViscosity={0.95}\r\n      maxBounds={bounds}\r\n    >\r\n      <TileLayer\r\n        url={url}\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n      <Marker position={[lat, long]} keepInView={true} autoPan={true}>\r\n        <Popup className=\"info\">\r\n          <p>\r\n            <b>Population:</b> {population}\r\n          </p>\r\n          <p>\r\n            <b>Region:</b> {region}\r\n          </p>\r\n          <p>\r\n            <b>Languages:</b> {languages}\r\n          </p>\r\n          <p>\r\n            <b>Currencies:</b> {currencies}\r\n          </p>\r\n        </Popup>\r\n      </Marker>\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React from 'react';\r\n\r\nconst LoadingScreen = (props) => {\r\n  return (\r\n    <div className=\"ui active\">\r\n      <div className=\"ui big text loader\">{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoadingScreen.defaultProps = {\r\n  message: 'Loading...',\r\n};\r\n\r\nexport default LoadingScreen;\r\n","export default __webpack_public_path__ + \"static/media/correct.87ab3071.wav\";","export default __webpack_public_path__ + \"static/media/wrong.9ed0fe46.wav\";","import './Game.css';\r\nimport React from 'react';\r\nimport countriesService from '../apis/countries';\r\nimport CountryList from './CountryList';\r\nimport Map from './Map';\r\nimport LoadingScreen from './LoadingScreen';\r\nimport correctSoundEffect from '../sounds/correct.wav';\r\nimport wrongSoundEffect from '../sounds/wrong.wav';\r\n\r\nclass Game extends React.Component {\r\n  state = {\r\n    capitalCity: '',\r\n    countries: [],\r\n    options: [],\r\n    answer: null,\r\n    score: 0,\r\n    countryInfo: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const response = await countriesService.get('/all', {\r\n      params: {\r\n        fields:\r\n          'name;capital;flag;languages;population;latlng;subregion;currencies',\r\n      },\r\n    });\r\n\r\n    this.setState({\r\n      countries: response.data.filter((item) => {\r\n        return item.capital.length !== 0;\r\n      }),\r\n    });\r\n\r\n    this.setCountries();\r\n  }\r\n\r\n  onCountryClick = (answer) => {\r\n    let score = this.state.score;\r\n    if (answer === this.state.answer) {\r\n      // play correct answer sound\r\n      new Audio(correctSoundEffect).play();\r\n      score++;\r\n    } else {\r\n      // play wrong answer sound\r\n      const audio = new Audio(wrongSoundEffect);\r\n      audio.volume = 0.25;\r\n      audio.play();\r\n    }\r\n\r\n    this.setState({\r\n      score,\r\n    });\r\n\r\n    this.setCountries();\r\n  };\r\n\r\n  setCountries = () => {\r\n    const options = this.chooseCountries(this.state.countries, 4);\r\n    const answer = Math.floor(Math.random() * options.length);\r\n    const capitalCity = options[answer].capital;\r\n\r\n    let countries = this.state.countries;\r\n    if (this.state.countries.length > 4) {\r\n      const index = countries.indexOf(options[answer]);\r\n      countries.splice(index, 1);\r\n    }\r\n\r\n    const countryInfo = options[answer];\r\n\r\n    this.setState({\r\n      countryInfo,\r\n      countries,\r\n      capitalCity,\r\n      answer,\r\n      options,\r\n    });\r\n  };\r\n\r\n  chooseCountries(arr, n) {\r\n    let result = new Array(n),\r\n      len = arr.length,\r\n      taken = new Array(len);\r\n    if (n > len)\r\n      throw new RangeError(\r\n        'chooseCountries: more elements taken than available'\r\n      );\r\n    while (n--) {\r\n      let x = Math.floor(Math.random() * len);\r\n      result[n] = arr[x in taken ? taken[x] : x];\r\n      taken[x] = --len in taken ? taken[len] : len;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.countryInfo) {\r\n      return <LoadingScreen />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"ui container\" style={{ paddingTop: '50px' }}>\r\n        <div className=\"ui centered huge capitalCity\">\r\n          {this.state.capitalCity}\r\n        </div>\r\n        <Map info={this.state.countryInfo} city={this.state.capitalCity} />\r\n        <div className=\"score\">Score: {this.state.score}</div>\r\n        <CountryList\r\n          countries={this.state.options}\r\n          onCountryClick={this.onCountryClick}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport Game from './Game.js';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <Game />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}