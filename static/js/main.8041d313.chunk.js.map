{"version":3,"sources":["apis/countries.js","components/CountryItem.js","components/CountryList.js","components/LoadingScreen.js","components/Game.js","components/App.js","index.js"],"names":["axios","create","baseURL","CountryItem","country","onCountryClick","option","answer","selectedCountry","disabled","className","onClick","style","backgroundColor","CountryList","countries","LoadingScreen","props","message","defaultProps","Game","state","capitalCity","score","setState","console","log","setCountries","a","countriesService","get","params","fields","response","countriesList","chooseCountries","data","map","r","name","chooseAnswer","capital","setTimeout","this","arr","Math","floor","random","length","n","result","Array","len","taken","RangeError","x","React","Component","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8041d313.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://restcountries.eu/rest/v2',\n});\n","import React from \"react\";\n\nconst CountryItem = ({\n  country,\n  onCountryClick,\n  option,\n  answer,\n  selectedCountry,\n  disabled,\n}) => {\n  return (\n    <div className='six wide column center aligned'>\n      <div\n        className='ui massive segment city'\n        onClick={() => onCountryClick(option)}\n        disabled={disabled}\n        style={{\n          backgroundColor: !selectedCountry\n            ? \"transparent\"\n            : selectedCountry === answer\n            ? \"green\"\n            : \"red\",\n        }}\n      >\n        {country}\n      </div>\n    </div>\n  );\n};\n\nexport default CountryItem;\n","import React from \"react\";\nimport CountryItem from \"./CountryItem\";\n\nconst CountryList = ({\n  countries,\n  onCountryClick,\n  answer,\n  selectedCountry,\n  disabled,\n}) => {\n  return (\n    <div className='ui two centered grid'>\n      <div className='sixteen column centered row'>\n        <CountryItem\n          country={countries[0]}\n          onCountryClick={onCountryClick}\n          option={0}\n          answer={answer}\n          selectedCountry={selectedCountry}\n          disabled={disabled}\n        />\n        <CountryItem\n          country={countries[1]}\n          onCountryClick={onCountryClick}\n          option={1}\n          answer={answer}\n          selectedCountry={selectedCountry}\n          disabled={disabled}\n        />\n      </div>\n      <div className='sixteen column centered row'>\n        <CountryItem\n          country={countries[2]}\n          onCountryClick={onCountryClick}\n          option={2}\n          answer={answer}\n          selectedCountry={selectedCountry}\n          disabled={disabled}\n        />\n        <CountryItem\n          country={countries[3]}\n          onCountryClick={onCountryClick}\n          option={3}\n          answer={answer}\n          selectedCountry={selectedCountry}\n          disabled={disabled}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CountryList;\n","import React from 'react';\n\nconst LoadingScreen = (props) => {\n  return (\n    <div className=\"ui active dimmer\">\n      <div className=\"ui big text loader\">{props.message}</div>\n    </div>\n  );\n};\n\nLoadingScreen.defaultProps = {\n  message: 'Loading...',\n};\n\nexport default LoadingScreen;\n","import \"./Game.css\";\nimport React from \"react\";\nimport countriesService from \"../apis/countries\";\nimport CountryList from \"./CountryList\";\nimport LoadingScreen from \"./LoadingScreen\";\n\nclass Game extends React.Component {\n  state = {\n    capitalCity: \"\",\n    countries: [],\n    answer: null,\n    score: 0,\n    selectedCountry: null,\n    disabled: false,\n  };\n\n  componentDidMount() {\n    this.setCountries(2000);\n  }\n\n  onCountryClick = (answer) => {\n    if (this.state.disabled) {\n      return;\n    }\n\n    this.setState(\n      {\n        selectedCountry: answer,\n        disabled: true,\n      },\n      () => console.log(\"Selected option\", this.state.selectedCountry)\n    );\n\n    if (answer === this.state.answer) {\n      console.log(\"Correct.\");\n      this.setState((state) => ({ score: state.score + 1 }));\n    } else {\n      console.log(\"Wrong.\");\n    }\n\n    this.setCountries();\n  };\n\n  setCountries = async (time = 2000) => {\n    const response = await countriesService.get(\"/all\", {\n      params: {\n        fields: \"name;capital\",\n      },\n    });\n    const countriesList = this.chooseCountries(response.data, 4);\n    let countries = countriesList.map((r) => {\n      return r.name;\n    });\n\n    const answer = this.chooseAnswer(countriesList);\n    console.log(\"Answer:\", answer);\n    const capitalCity = countriesList[answer].capital;\n\n    setTimeout(() => {\n      this.setState({\n        capitalCity: capitalCity,\n        countries: countries,\n        answer: answer,\n        selectedCountry: null,\n        disabled: false,\n      });\n    }, 0);\n  };\n\n  chooseAnswer(arr) {\n    let answer = Math.floor(Math.random() * arr.length);\n    let capitalCity = arr[answer].capital;\n    while (!capitalCity) {\n      answer = (answer + 1) % 4;\n      capitalCity = arr[answer].capital;\n    }\n    return answer;\n  }\n\n  chooseCountries(arr, n) {\n    let result = new Array(n),\n      len = arr.length,\n      taken = new Array(len);\n    if (n > len)\n      throw new RangeError(\"getRandom: more elements taken than available\");\n    while (n--) {\n      let x = Math.floor(Math.random() * len);\n      result[n] = arr[x in taken ? taken[x] : x];\n      taken[x] = --len in taken ? taken[len] : len;\n    }\n    return result;\n  }\n\n  render() {\n    if (!this.state.capitalCity) {\n      return <LoadingScreen />;\n    }\n\n    return (\n      <div className='ui container'>\n        <div className='ui centered huge header'>{this.state.capitalCity}</div>\n        <CountryList\n          countries={this.state.countries}\n          onCountryClick={this.onCountryClick}\n          answer={this.state.answer}\n          selectedCountry={this.state.selectedCountry}\n          disabled={this.state.disabled}\n        />\n        <div>\n          <h2 className='score'>{this.state.score}</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './Game.js';\n\nclass App extends React.Component {\n  render() {\n    return <Game />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}