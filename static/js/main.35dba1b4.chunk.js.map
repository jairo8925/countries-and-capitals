{"version":3,"sources":["apis/countries.js","components/CountryItem.js","components/CountryList.js","components/Map.js","components/Game.js","components/App.js","index.js"],"names":["axios","create","baseURL","CountryItem","country","onCountryClick","option","flag","className","onClick","alt","src","CountryList","countries","answer","flags","Map","corner1","L","latLng","corner2","bounds","latLngBounds","MapContainer","center","zoom","doubleClickZoom","touchZoom","zoomSnap","zoomDelta","trackResize","scrollWheelZoom","maxBoundsViscosity","maxBounds","TileLayer","url","attribution","Marker","position","Number","this","props","lat","long","keepInView","autoPan","React","Component","Game","state","capitalCity","options","score","setState","setCountries","countriesList","chooseCountries","Math","floor","random","length","capital","latlng","index","indexOf","splice","forEach","i","push","name","a","countriesService","get","params","fields","response","data","filter","item","arr","n","result","Array","len","taken","RangeError","x","style","paddingTop","city","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.35dba1b4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://restcountries.eu/rest/v2',\r\n});\r\n","import './CountryItem.css';\r\nimport React from 'react';\r\n\r\nconst CountryItem = ({ country, onCountryClick, option, flag }) => {\r\n  return (\r\n    <div className=\"eight wide column center aligned\">\r\n      <div\r\n        className=\"ui huge segment country noselect\"\r\n        onClick={() => onCountryClick(option)}\r\n      >\r\n        {country}\r\n        <img className=\"flag\" alt={`Flag of ${country}`} src={flag} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryItem;\r\n","import React from 'react';\r\nimport CountryItem from './CountryItem';\r\n\r\nconst CountryList = ({ countries, onCountryClick, answer, flags }) => {\r\n  return (\r\n    <div className=\"ui two centered grid\">\r\n      <div className=\"sixteen column centered row\">\r\n        <CountryItem\r\n          country={countries[0]}\r\n          onCountryClick={onCountryClick}\r\n          option={0}\r\n          answer={answer}\r\n          flag={flags[0]}\r\n        />\r\n        <CountryItem\r\n          country={countries[1]}\r\n          onCountryClick={onCountryClick}\r\n          option={1}\r\n          answer={answer}\r\n          flag={flags[1]}\r\n        />\r\n      </div>\r\n      <div className=\"sixteen column centered row\">\r\n        <CountryItem\r\n          country={countries[2]}\r\n          onCountryClick={onCountryClick}\r\n          option={2}\r\n          answer={answer}\r\n          flag={flags[2]}\r\n        />\r\n        <CountryItem\r\n          country={countries[3]}\r\n          onCountryClick={onCountryClick}\r\n          option={3}\r\n          answer={answer}\r\n          flag={flags[3]}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryList;\r\n","import \"./Map.css\";\r\nimport React from \"react\";\r\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\n\r\nclass Map extends React.Component {\r\n  render() {\r\n    const corner1 = L.latLng(-90, -200);\r\n    const corner2 = L.latLng(90, 200);\r\n    const bounds = L.latLngBounds(corner1, corner2);\r\n    const url = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\r\n\r\n    return (\r\n      <MapContainer\r\n        center={[5, 0]}\r\n        zoom={2}\r\n        doubleClickZoom={false}\r\n        touchZoom={false}\r\n        zoomSnap={false}\r\n        zoomDelta={false}\r\n        trackResize={false}\r\n        scrollWheelZoom={false}\r\n        maxBoundsViscosity={1.0}\r\n        maxBounds={bounds}\r\n      >\r\n        <TileLayer\r\n          url={url}\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        <Marker\r\n          position={[Number(this.props.lat), Number(this.props.long)]}\r\n          keepInView={true}\r\n          autoPan={true}\r\n        />\r\n      </MapContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;\r\n","import './Game.css';\r\nimport React from 'react';\r\nimport countriesService from '../apis/countries';\r\nimport CountryList from './CountryList';\r\nimport Map from './Map';\r\n\r\nclass Game extends React.Component {\r\n  state = {\r\n    capitalCity: '',\r\n    lat: null,\r\n    long: null,\r\n    countries: [],\r\n    flags: [],\r\n    options: [],\r\n    answer: null,\r\n    score: 0,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const response = await countriesService.get('/all', {\r\n      params: {\r\n        fields: 'name;capital;latlng;flag',\r\n      },\r\n    });\r\n\r\n    this.setState({\r\n      countries: response.data.filter((item) => {\r\n        return item.capital.length !== 0;\r\n      }),\r\n    });\r\n\r\n    this.setCountries();\r\n  }\r\n\r\n  onCountryClick = (answer) => {\r\n    this.setState({\r\n      score:\r\n        answer === this.state.answer ? this.state.score + 1 : this.state.score,\r\n    });\r\n\r\n    this.setCountries();\r\n  };\r\n\r\n  setCountries = () => {\r\n    const countriesList = this.chooseCountries(this.state.countries, 4);\r\n    const answer = Math.floor(Math.random() * countriesList.length);\r\n    const capitalCity = countriesList[answer].capital;\r\n    const lat = countriesList[answer].latlng[0];\r\n    const long = countriesList[answer].latlng[1];\r\n\r\n    let countries = this.state.countries;\r\n    if (this.state.countries.length > 4) {\r\n      const index = countries.indexOf(countriesList[answer]);\r\n      countries.splice(index, 1);\r\n    }\r\n\r\n    const flags = [];\r\n    const options = [];\r\n\r\n    countriesList.forEach((i) => {\r\n      options.push(i.name);\r\n      flags.push(i.flag);\r\n    });\r\n\r\n    this.setState({\r\n      countries,\r\n      capitalCity,\r\n      lat,\r\n      long,\r\n      answer,\r\n      options,\r\n      flags,\r\n    });\r\n  };\r\n\r\n  chooseCountries(arr, n) {\r\n    let result = new Array(n),\r\n      len = arr.length,\r\n      taken = new Array(len);\r\n    if (n > len)\r\n      throw new RangeError('getRandom: more elements taken than available');\r\n    while (n--) {\r\n      let x = Math.floor(Math.random() * len);\r\n      result[n] = arr[x in taken ? taken[x] : x];\r\n      taken[x] = --len in taken ? taken[len] : len;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\" style={{ paddingTop: '50px' }}>\r\n        <div className=\"ui centered huge capitalCity\">\r\n          {this.state.capitalCity}\r\n        </div>\r\n        <Map\r\n          city={this.state.capitalCity}\r\n          lat={this.state.lat}\r\n          long={this.state.long}\r\n        />\r\n        <div>\r\n          <h2 className=\"score\">Score: {this.state.score}</h2>\r\n        </div>\r\n        <CountryList\r\n          flags={this.state.flags}\r\n          countries={this.state.options}\r\n          onCountryClick={this.onCountryClick}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport Game from './Game.js';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <Game />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}