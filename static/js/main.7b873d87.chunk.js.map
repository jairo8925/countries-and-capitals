{"version":3,"sources":["apis/countries.js","components/CountryItem.js","components/CountryList.js","components/Map.js","components/Game.js","components/App.js","index.js"],"names":["axios","create","baseURL","CountryItem","country","onCountryClick","option","className","onClick","CountryList","countries","answer","Map","corner1","L","latLng","corner2","bounds","latLngBounds","MapContainer","center","zoom","doubleClickZoom","touchZoom","zoomSnap","zoomDelta","trackResize","scrollWheelZoom","maxBoundsViscosity","maxBounds","TileLayer","url","attribution","Marker","position","Number","this","props","lat","long","keepInView","autoPan","React","Component","Game","state","capitalCity","options","score","setState","setCountries","chooseCountries","Math","floor","random","length","capital","latlng","map","item","name","a","countriesService","get","params","fields","response","data","filter","arr","n","result","Array","len","taken","RangeError","x","style","paddingTop","city","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7b873d87.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://restcountries.eu/rest/v2',\n});\n","import './CountryItem.css';\nimport React from 'react';\n\nconst CountryItem = ({ country, onCountryClick, option }) => {\n  return (\n    <div className=\"six wide column center aligned\">\n      <div\n        className=\"ui huge segment city\"\n        onClick={() => onCountryClick(option)}\n      >\n        {country}\n      </div>\n    </div>\n  );\n};\n\nexport default CountryItem;\n","import React from 'react';\nimport CountryItem from './CountryItem';\n\nconst CountryList = ({ countries, onCountryClick, answer }) => {\n  return (\n    <div className=\"ui two centered grid\">\n      <div className=\"sixteen column centered row\">\n        <CountryItem\n          country={countries[0]}\n          onCountryClick={onCountryClick}\n          option={0}\n          answer={answer}\n        />\n        <CountryItem\n          country={countries[1]}\n          onCountryClick={onCountryClick}\n          option={1}\n          answer={answer}\n        />\n      </div>\n      <div className=\"sixteen column centered row\">\n        <CountryItem\n          country={countries[2]}\n          onCountryClick={onCountryClick}\n          option={2}\n          answer={answer}\n        />\n        <CountryItem\n          country={countries[3]}\n          onCountryClick={onCountryClick}\n          option={3}\n          answer={answer}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CountryList;\n","import \"./Map.css\";\nimport React from \"react\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nclass Map extends React.Component {\n  render() {\n    const corner1 = L.latLng(-90, -200);\n    const corner2 = L.latLng(90, 200);\n    const bounds = L.latLngBounds(corner1, corner2);\n    const url = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\n    return (\n      <MapContainer\n        center={[5, 0]}\n        zoom={2}\n        doubleClickZoom={false}\n        touchZoom={false}\n        zoomSnap={false}\n        zoomDelta={false}\n        trackResize={false}\n        scrollWheelZoom={false}\n        maxBoundsViscosity={1.0}\n        maxBounds={bounds}\n      >\n        <TileLayer\n          url={url}\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <Marker\n          position={[Number(this.props.lat), Number(this.props.long)]}\n          keepInView={true}\n          autoPan={true}\n        />\n      </MapContainer>\n    );\n  }\n}\n\nexport default Map;\n","import './Game.css';\nimport React from 'react';\nimport countriesService from '../apis/countries';\nimport CountryList from './CountryList';\nimport Map from './Map';\n\nclass Game extends React.Component {\n  state = {\n    capitalCity: '',\n    lat: null,\n    long: null,\n    countries: [],\n    options: [],\n    answer: null,\n    score: 0,\n  };\n\n  async componentDidMount() {\n    const response = await countriesService.get('/all', {\n      params: {\n        fields: 'name;capital;latlng',\n      },\n    });\n\n    this.setState({\n      countries: response.data.filter((item) => {\n        return item.capital.length !== 0;\n      }),\n    });\n\n    this.setCountries();\n  }\n\n  onCountryClick = (answer) => {\n    // console.log(answer);\n\n    this.setState({\n      score:\n        answer === this.state.answer ? this.state.score + 1 : this.state.score,\n    });\n\n    this.setCountries();\n  };\n\n  setCountries = () => {\n    let options = this.chooseCountries(this.state.countries, 4);\n    const answer = Math.floor(Math.random() * options.length);\n    const capitalCity = options[answer].capital;\n    const lat = options[answer].latlng[0];\n    const long = options[answer].latlng[1];\n\n    this.setState({\n      capitalCity: capitalCity,\n      lat: lat,\n      long: long,\n      options: options.map((item) => {\n        return item.name;\n      }),\n      answer: answer,\n    });\n  };\n\n  chooseCountries(arr, n) {\n    let result = new Array(n),\n      len = arr.length,\n      taken = new Array(len);\n    if (n > len)\n      throw new RangeError('getRandom: more elements taken than available');\n    while (n--) {\n      let x = Math.floor(Math.random() * len);\n      result[n] = arr[x in taken ? taken[x] : x];\n      taken[x] = --len in taken ? taken[len] : len;\n    }\n    return result;\n  }\n\n  render() {\n    return (\n      <div className=\"ui container\" style={{ paddingTop: '50px' }}>\n        <div className=\"ui centered huge capitalCity\">\n          {this.state.capitalCity}\n        </div>\n        <Map\n          city={this.state.capitalCity}\n          lat={this.state.lat}\n          long={this.state.long}\n        />\n        <CountryList\n          countries={this.state.options}\n          onCountryClick={this.onCountryClick}\n        />\n        <div>\n          <h2 className=\"score\">Score: {this.state.score}</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './Game.js';\n\nclass App extends React.Component {\n  render() {\n    return <Game />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}