{"version":3,"sources":["apis/countries.js","components/CountryItem.js","components/CountryList.js","components/Map.js","components/Game.js","components/App.js","index.js"],"names":["axios","create","baseURL","CountryItem","country","onCountryClick","option","flag","className","onClick","alt","src","CountryList","countries","answer","flags","Map","corner1","L","latLng","corner2","bounds","latLngBounds","MapContainer","center","zoom","doubleClickZoom","touchZoom","zoomSnap","zoomDelta","trackResize","scrollWheelZoom","maxBoundsViscosity","maxBounds","TileLayer","url","attribution","Marker","position","Number","this","props","lat","long","keepInView","autoPan","Popup","React","Component","Game","state","capitalCity","options","score","setState","setCountries","countriesList","chooseCountries","Math","floor","random","length","capital","latlng","index","indexOf","splice","forEach","i","push","name","a","countriesService","get","params","fields","response","data","filter","item","arr","n","result","Array","len","taken","RangeError","x","style","paddingTop","city","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d95de984.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://restcountries.eu/rest/v2',\n});\n","import './CountryItem.css';\nimport React from 'react';\n\nconst CountryItem = ({ country, onCountryClick, option, flag }) => {\n  return (\n    <div className=\"eight wide column center aligned\">\n      <div\n        className=\"ui huge segment country noselect\"\n        onClick={() => onCountryClick(option)}\n      >\n        {country}\n        <img className=\"flag\" alt={`Flag of ${country}`} src={flag} />\n      </div>\n    </div>\n  );\n};\n\nexport default CountryItem;\n","import React from 'react';\nimport CountryItem from './CountryItem';\n\nconst CountryList = ({ countries, onCountryClick, answer, flags }) => {\n  return (\n    <div className=\"ui two centered grid\">\n      <div className=\"sixteen column centered row\">\n        <CountryItem\n          country={countries[0]}\n          onCountryClick={onCountryClick}\n          option={0}\n          answer={answer}\n          flag={flags[0]}\n        />\n        <CountryItem\n          country={countries[1]}\n          onCountryClick={onCountryClick}\n          option={1}\n          answer={answer}\n          flag={flags[1]}\n        />\n      </div>\n      <div className=\"sixteen column centered row\">\n        <CountryItem\n          country={countries[2]}\n          onCountryClick={onCountryClick}\n          option={2}\n          answer={answer}\n          flag={flags[2]}\n        />\n        <CountryItem\n          country={countries[3]}\n          onCountryClick={onCountryClick}\n          option={3}\n          answer={answer}\n          flag={flags[3]}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CountryList;\n","import './Map.css';\nimport React from 'react';\nimport { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet';\nimport L from 'leaflet';\n\nclass Map extends React.Component {\n  render() {\n    const corner1 = L.latLng(-90, -200);\n    const corner2 = L.latLng(90, 200);\n    const bounds = L.latLngBounds(corner1, corner2);\n    const url = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    return (\n      <MapContainer\n        center={[5, 0]}\n        zoom={2}\n        doubleClickZoom={false}\n        touchZoom={false}\n        zoomSnap={false}\n        zoomDelta={false}\n        trackResize={false}\n        scrollWheelZoom={false}\n        maxBoundsViscosity={1.0}\n        maxBounds={bounds}\n      >\n        <TileLayer\n          url={url}\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <Marker\n          position={[Number(this.props.lat), Number(this.props.long)]}\n          keepInView={true}\n          autoPan={true}\n        >\n          <Popup>\n            Country information placeholder <br /> Add later.\n          </Popup>\n        </Marker>\n      </MapContainer>\n    );\n  }\n}\n\nexport default Map;\n","import './Game.css';\nimport React from 'react';\nimport countriesService from '../apis/countries';\nimport CountryList from './CountryList';\nimport Map from './Map';\n\nclass Game extends React.Component {\n  state = {\n    capitalCity: '',\n    lat: null,\n    long: null,\n    countries: [],\n    flags: [],\n    options: [],\n    answer: null,\n    score: 0,\n  };\n\n  async componentDidMount() {\n    const response = await countriesService.get('/all', {\n      params: {\n        fields: 'name;capital;latlng;flag',\n      },\n    });\n\n    this.setState({\n      countries: response.data.filter((item) => {\n        return item.capital.length !== 0;\n      }),\n    });\n\n    this.setCountries();\n  }\n\n  onCountryClick = (answer) => {\n    this.setState({\n      score:\n        answer === this.state.answer ? this.state.score + 1 : this.state.score,\n    });\n\n    this.setCountries();\n  };\n\n  setCountries = () => {\n    const countriesList = this.chooseCountries(this.state.countries, 4);\n    const answer = Math.floor(Math.random() * countriesList.length);\n    const capitalCity = countriesList[answer].capital;\n    const lat = countriesList[answer].latlng[0];\n    const long = countriesList[answer].latlng[1];\n\n    let countries = this.state.countries;\n    if (this.state.countries.length > 4) {\n      const index = countries.indexOf(countriesList[answer]);\n      countries.splice(index, 1);\n    }\n\n    const flags = [];\n    const options = [];\n\n    countriesList.forEach((i) => {\n      options.push(i.name);\n      flags.push(i.flag);\n    });\n\n    this.setState({\n      countries,\n      capitalCity,\n      lat,\n      long,\n      answer,\n      options,\n      flags,\n    });\n  };\n\n  chooseCountries(arr, n) {\n    let result = new Array(n),\n      len = arr.length,\n      taken = new Array(len);\n    if (n > len)\n      throw new RangeError('getRandom: more elements taken than available');\n    while (n--) {\n      let x = Math.floor(Math.random() * len);\n      result[n] = arr[x in taken ? taken[x] : x];\n      taken[x] = --len in taken ? taken[len] : len;\n    }\n    return result;\n  }\n\n  render() {\n    return (\n      <div className=\"ui container\" style={{ paddingTop: '50px' }}>\n        <div className=\"ui centered huge capitalCity\">\n          {this.state.capitalCity}\n        </div>\n        <Map\n          city={this.state.capitalCity}\n          lat={this.state.lat}\n          long={this.state.long}\n        />\n        <div>\n          <h2 className=\"score\">Score: {this.state.score}</h2>\n        </div>\n        <CountryList\n          flags={this.state.flags}\n          countries={this.state.options}\n          onCountryClick={this.onCountryClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './Game.js';\n\nclass App extends React.Component {\n  render() {\n    return <Game />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}