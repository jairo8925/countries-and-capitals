{"version":3,"sources":["apis/countries.js","components/CountryItem.js","components/CountryList.js","components/Map.js","components/LoadingScreen.js","sounds/correct.wav","sounds/wrong.wav","components/Game.js","components/App.js","index.js"],"names":["axios","create","baseURL","CountryItem","country","onCountryClick","option","className","onClick","name","alt","src","flag","CountryList","countries","Map","info","population","Number","toLocaleString","lat","latlng","long","region","subregion","languages","map","i","join","currencies","useState","setMap","flyTo","MapContainer","center","zoom","zoomControl","whenCreated","doubleClickZoom","touchZoom","zoomSnap","zoomDelta","trackResize","scrollWheelZoom","dragging","TileLayer","url","attribution","Marker","position","keepInView","Tooltip","permanent","LoadingScreen","props","message","defaultProps","Game","answer","audio","score","state","Audio","correctSoundEffect","wrongSoundEffect","volume","play","setState","total","setCountries","options","chooseCountries","Math","floor","random","length","capitalCity","capital","index","indexOf","splice","countryInfo","onResetClick","history","onAudioClick","a","countriesService","get","params","fields","response","toDelete","Set","data","filter","obj","has","item","this","arr","n","result","Array","len","taken","RangeError","x","audioButton","resetButton","tabIndex","style","paddingTop","paddingBottom","city","React","Component","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8365f050.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://restcountries.eu/rest/v2',\r\n});\r\n","import './CountryItem.css';\r\nimport React from 'react';\r\n\r\nconst CountryItem = ({ country, onCountryClick, option }) => {\r\n  return (\r\n    <div className=\"eight wide column center aligned\">\r\n      <div\r\n        className=\"ui huge segment country noselect\"\r\n        onClick={() => onCountryClick(option)}\r\n      >\r\n        {country.name}\r\n        <img\r\n          className=\"flag\"\r\n          alt={`Flag of ${country.name}`}\r\n          src={country.flag}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryItem;\r\n","import React from \"react\";\r\nimport CountryItem from \"./CountryItem\";\r\n\r\nconst CountryList = ({ countries, onCountryClick }) => {\r\n  return (\r\n    <div className='ui two centered grid'>\r\n      <div className='sixteen column centered row'>\r\n        <CountryItem\r\n          country={countries[0]}\r\n          onCountryClick={onCountryClick}\r\n          option={0}\r\n        />\r\n        <CountryItem\r\n          country={countries[1]}\r\n          onCountryClick={onCountryClick}\r\n          option={1}\r\n        />\r\n      </div>\r\n      <div className='sixteen column centered row'>\r\n        <CountryItem\r\n          country={countries[2]}\r\n          onCountryClick={onCountryClick}\r\n          option={2}\r\n        />\r\n        <CountryItem\r\n          country={countries[3]}\r\n          onCountryClick={onCountryClick}\r\n          option={3}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryList;\r\n","import \"./Map.css\";\r\nimport React, { useState } from \"react\";\r\nimport { MapContainer, Marker, Tooltip, TileLayer } from \"react-leaflet\";\r\n\r\nconst Map = ({ info }) => {\r\n  const population = Number(info.population).toLocaleString();\r\n  const lat = Number(info.latlng[0]);\r\n  const long = Number(info.latlng[1]);\r\n  const region = info.subregion;\r\n  const languages = info.languages\r\n    .map((i) => {\r\n      return i.name;\r\n    })\r\n    .join(\", \");\r\n  const currencies = info.currencies\r\n    .map((i) => {\r\n      return i.name;\r\n    })\r\n    .join(\", \");\r\n\r\n  const url = \"https://tiles.wmflabs.org/osm-no-labels/{z}/{x}/{y}.png\";\r\n\r\n  const [map, setMap] = useState(null);\r\n  if (map) {\r\n    map.flyTo([lat, long], 3);\r\n  }\r\n\r\n  return (\r\n    <MapContainer\r\n      center={[lat, long]}\r\n      zoom={3}\r\n      zoomControl={false}\r\n      whenCreated={setMap}\r\n      doubleClickZoom={false}\r\n      touchZoom={false}\r\n      zoomSnap={false}\r\n      zoomDelta={false}\r\n      trackResize={false}\r\n      scrollWheelZoom={false}\r\n      dragging={false}\r\n    >\r\n      <TileLayer\r\n        url={url}\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n      <Marker position={[lat, long]} keepInView={true}>\r\n        <Tooltip className='info' permanent>\r\n          <p>\r\n            <b>Population:</b> {population}\r\n          </p>\r\n          <p>\r\n            <b>Region:</b> {region}\r\n          </p>\r\n          <p>\r\n            <b>Languages:</b> {languages}\r\n          </p>\r\n          <p>\r\n            <b>Currencies:</b> {currencies}\r\n          </p>\r\n        </Tooltip>\r\n      </Marker>\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React from 'react';\r\n\r\nconst LoadingScreen = (props) => {\r\n  return (\r\n    <div className=\"ui active\">\r\n      <div className=\"ui big text loader\">{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoadingScreen.defaultProps = {\r\n  message: 'Loading...',\r\n};\r\n\r\nexport default LoadingScreen;\r\n","export default __webpack_public_path__ + \"static/media/correct.87ab3071.wav\";","export default __webpack_public_path__ + \"static/media/wrong.9ed0fe46.wav\";","import './Game.css';\r\nimport React from 'react';\r\nimport countriesService from '../apis/countries';\r\nimport CountryList from './CountryList';\r\nimport Map from './Map';\r\nimport LoadingScreen from './LoadingScreen';\r\nimport correctSoundEffect from '../sounds/correct.wav';\r\nimport wrongSoundEffect from '../sounds/wrong.wav';\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      history: [],\r\n      capitalCity: '',\r\n      countries: [],\r\n      options: [],\r\n      answer: null,\r\n      score: 0,\r\n      countryInfo: null,\r\n      total: 0,\r\n      audio: true,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const response = await countriesService.get('/all', {\r\n      params: {\r\n        fields:\r\n          'name;capital;flag;languages;population;latlng;subregion;currencies',\r\n      },\r\n    });\r\n\r\n    const toDelete = new Set(['Holy See']);\r\n    response.data = response.data.filter((obj) => !toDelete.has(obj.name));\r\n    const countries = response.data.filter((item) => {\r\n      return item.capital.length !== 0;\r\n    });\r\n\r\n    this.setState({\r\n      countries,\r\n      history: countries,\r\n    });\r\n\r\n    this.setCountries();\r\n  }\r\n\r\n  onCountryClick = (answer) => {\r\n    let score = this.state.score;\r\n    let audio;\r\n    if (answer === this.state.answer) {\r\n      audio = new Audio(correctSoundEffect);\r\n      score++;\r\n    } else {\r\n      audio = new Audio(wrongSoundEffect);\r\n      audio.volume = 0.25;\r\n    }\r\n\r\n    if (this.state.audio) {\r\n      audio.play();\r\n    }\r\n\r\n    this.setState({\r\n      score,\r\n      total: this.state.total + 1,\r\n    });\r\n\r\n    this.setCountries();\r\n  };\r\n\r\n  setCountries = () => {\r\n    const options = this.chooseCountries(this.state.countries, 4);\r\n    const answer = Math.floor(Math.random() * options.length);\r\n    const capitalCity = options[answer].capital;\r\n\r\n    let countries = this.state.countries;\r\n    const index = countries.indexOf(options[answer]);\r\n    countries.splice(index, 1);\r\n\r\n    const countryInfo = options[answer];\r\n\r\n    this.setState({\r\n      countryInfo,\r\n      countries,\r\n      capitalCity,\r\n      answer,\r\n      options,\r\n    });\r\n  };\r\n\r\n  chooseCountries(arr, n) {\r\n    let result = new Array(n),\r\n      len = arr.length,\r\n      taken = new Array(len);\r\n    if (n > len)\r\n      throw new RangeError(\r\n        'chooseCountries: more elements taken than available'\r\n      );\r\n    while (n--) {\r\n      let x = Math.floor(Math.random() * len);\r\n      result[n] = arr[x in taken ? taken[x] : x];\r\n      taken[x] = --len in taken ? taken[len] : len;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  onResetClick = () => {\r\n    this.setState({\r\n      countries: this.state.history,\r\n      capitalCity: '',\r\n      options: [],\r\n      answer: null,\r\n      score: 0,\r\n      countryInfo: null,\r\n      total: 0,\r\n    });\r\n    this.setCountries();\r\n  };\r\n\r\n  onAudioClick = () => {\r\n    this.setState({\r\n      audio: !this.state.audio,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.countryInfo) {\r\n      return <LoadingScreen />;\r\n    }\r\n\r\n    let resetButton = (\r\n      <div\r\n        className=\"ui right floated secondary animated button resetButton\"\r\n        onClick={this.onResetClick}\r\n        tabIndex=\"0\"\r\n      >\r\n        <div className=\"visible content\">Reset Game</div>\r\n        <div className=\"hidden content\">\r\n          <i className=\"undo alternate icon\"></i>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    let audioButton;\r\n    if (this.state.audio) {\r\n      audioButton = (\r\n        <button\r\n          className=\"positive ui right floated button audioButton\"\r\n          onClick={this.onAudioClick}\r\n        >\r\n          Audio On\r\n        </button>\r\n      );\r\n    } else {\r\n      audioButton = (\r\n        <button\r\n          className=\"negative ui right floated button audioButton\"\r\n          onClick={this.onAudioClick}\r\n        >\r\n          Audio Off\r\n        </button>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"ui container\"\r\n        style={{ paddingTop: '25px', paddingBottom: '25px' }}\r\n      >\r\n        <div className=\"titleHeader\">\r\n          <div className=\"ui centered huge header capitalCity noselect\">\r\n            {this.state.capitalCity}\r\n          </div>\r\n          <div className=\"small ui buttons buttonsContainer\">\r\n            {resetButton}\r\n            {audioButton}\r\n          </div>\r\n        </div>\r\n        <Map info={this.state.countryInfo} city={this.state.capitalCity} />\r\n        <CountryList\r\n          countries={this.state.options}\r\n          onCountryClick={this.onCountryClick}\r\n        />\r\n        <div className=\"ui score huge header noselect\">\r\n          Score: {this.state.score}{' '}\r\n          {this.state.total !== 0 ? `out of ${this.state.total}` : ''}{' '}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport Game from './Game.js';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <Game />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}