{"version":3,"sources":["apis/countries.js","components/CountryItem.js","components/CountryList.js","components/Map.js","components/LoadingScreen.js","sounds/correct.wav","sounds/wrong.wav","components/Game.js","components/App.js","index.js"],"names":["axios","create","baseURL","CountryItem","country","onCountryClick","option","className","onClick","name","alt","src","flag","CountryList","countries","Map","info","population","Number","toLocaleString","lat","latlng","long","region","subregion","languages","map","i","join","useState","setMap","flyTo","MapContainer","center","zoom","zoomControl","whenCreated","doubleClickZoom","touchZoom","zoomSnap","zoomDelta","trackResize","scrollWheelZoom","dragging","TileLayer","url","attribution","Marker","position","keepInView","Tooltip","permanent","LoadingScreen","props","message","defaultProps","Game","answer","audio","score","state","Audio","correctSoundEffect","wrongSoundEffect","volume","play","setState","setCountries","options","chooseCountries","Math","floor","random","length","capitalCity","capital","index","indexOf","splice","countryInfo","onResetClick","history","onAudioClick","total","a","countriesService","get","response","data","filter","item","independent","console","log","this","arr","n","result","Array","len","taken","RangeError","x","audioButton","resetButton","tabIndex","onHomeClick","city","React","Component","App","running","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.536d735e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://restcountries.com/v3\",\n});\n","import './CountryItem.css';\nimport React from 'react';\n\nconst CountryItem = ({ country, onCountryClick, option }) => {\n  return (\n    <div className=\"eight wide column center aligned\">\n      <div\n        className=\"ui huge segment country noselect\"\n        onClick={() => onCountryClick(option)}\n      >\n        {country.name}\n        <img\n          className=\"flag\"\n          alt={`Flag of ${country.name}`}\n          src={country.flag}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CountryItem;\n","import React from \"react\";\nimport CountryItem from \"./CountryItem\";\n\nconst CountryList = ({ countries, onCountryClick }) => {\n  return (\n    <div className='ui two centered grid'>\n      <div className='sixteen column centered row'>\n        <CountryItem\n          country={countries[0]}\n          onCountryClick={onCountryClick}\n          option={0}\n        />\n        <CountryItem\n          country={countries[1]}\n          onCountryClick={onCountryClick}\n          option={1}\n        />\n      </div>\n      <div className='sixteen column centered row'>\n        <CountryItem\n          country={countries[2]}\n          onCountryClick={onCountryClick}\n          option={2}\n        />\n        <CountryItem\n          country={countries[3]}\n          onCountryClick={onCountryClick}\n          option={3}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CountryList;\n","import \"./Map.css\";\nimport React, { useState } from \"react\";\nimport { MapContainer, Marker, Tooltip, TileLayer } from \"react-leaflet\";\n\nconst Map = ({ info }) => {\n  const population = Number(info.population).toLocaleString();\n  const lat = Number(info.latlng[0]);\n  const long = Number(info.latlng[1]);\n  const region = info.subregion;\n  const languages = info.languages\n    .map((i) => {\n      return i.name;\n    })\n    .join(\", \");\n  // const currencies = info.currencies\n  //   .map((i) => {\n  //     return i.name;\n  //   })\n  //   .join(\", \");\n\n  const url = \"https://tiles.wmflabs.org/osm-no-labels/{z}/{x}/{y}.png\";\n\n  const [map, setMap] = useState(null);\n  if (map) {\n    map.flyTo([lat, long], 3);\n  }\n\n  return (\n    <MapContainer\n      center={[lat, long]}\n      zoom={3}\n      zoomControl={false}\n      whenCreated={setMap}\n      doubleClickZoom={false}\n      touchZoom={false}\n      zoomSnap={false}\n      zoomDelta={false}\n      trackResize={false}\n      scrollWheelZoom={false}\n      dragging={false}\n    >\n      <TileLayer\n        url={url}\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <Marker position={[lat, long]} keepInView={true}>\n        <Tooltip className='info' permanent>\n          <p>\n            <b>Population:</b> {population}\n          </p>\n          <p>\n            <b>Region:</b> {region}\n          </p>\n          <p>\n            <b>Languages:</b> {languages}\n          </p>\n        </Tooltip>\n      </Marker>\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import React from 'react';\n\nconst LoadingScreen = (props) => {\n  return (\n    <div className=\"ui active\">\n      <div className=\"ui big text loader\">{props.message}</div>\n    </div>\n  );\n};\n\nLoadingScreen.defaultProps = {\n  message: 'Loading...',\n};\n\nexport default LoadingScreen;\n","export default __webpack_public_path__ + \"static/media/correct.87ab3071.wav\";","export default __webpack_public_path__ + \"static/media/wrong.9ed0fe46.wav\";","import \"./Game.css\";\nimport React from \"react\";\nimport countriesService from \"../apis/countries\";\nimport CountryList from \"./CountryList\";\nimport Map from \"./Map\";\nimport LoadingScreen from \"./LoadingScreen\";\nimport correctSoundEffect from \"../sounds/correct.wav\";\nimport wrongSoundEffect from \"../sounds/wrong.wav\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      history: [],\n      capitalCity: \"\",\n      countries: [],\n      options: [],\n      answer: null,\n      score: 0,\n      countryInfo: null,\n      total: 0,\n      audio: true,\n    };\n  }\n\n  async componentDidMount() {\n    // const response = await countriesService.get(\"/all\", {\n    //   params: {\n    //     fields:\n    //       \"name;capital;flag;languages;population;latlng;subregion;currencies\",\n    //   },\n    // });\n\n    const response = await countriesService.get(\"/all\");\n\n    // const toDelete = new Set([\"Holy See\"]);\n    // response.data = response.data.filter((obj) => !toDelete.has(obj.name));\n    const countries = response.data.filter((item) => {\n      return item.capital.length !== 0 && item.independent === true;\n    });\n\n    console.log(countries);\n\n    this.setState({\n      countries,\n      history: countries,\n      total: countries.length,\n    });\n\n    this.setCountries();\n  }\n\n  onCountryClick = (answer) => {\n    let score = this.state.score;\n    let audio;\n    if (answer === this.state.answer) {\n      audio = new Audio(correctSoundEffect);\n      score++;\n    } else {\n      audio = new Audio(wrongSoundEffect);\n      audio.volume = 0.15;\n    }\n\n    if (this.state.audio) {\n      audio.play();\n    }\n\n    this.setState({\n      score,\n    });\n\n    this.setCountries();\n  };\n\n  setCountries = () => {\n    const options = this.chooseCountries(this.state.countries, 4);\n    const answer = Math.floor(Math.random() * options.length);\n    const capitalCity = options[answer].capital;\n\n    let countries = this.state.countries;\n    const index = countries.indexOf(options[answer]);\n    countries.splice(index, 1);\n\n    const countryInfo = options[answer];\n\n    this.setState({\n      countryInfo,\n      countries,\n      capitalCity,\n      answer,\n      options,\n    });\n  };\n\n  chooseCountries(arr, n) {\n    let result = new Array(n),\n      len = arr.length,\n      taken = new Array(len);\n    if (n > len)\n      throw new RangeError(\n        \"chooseCountries: more elements taken than available\"\n      );\n    while (n--) {\n      let x = Math.floor(Math.random() * len);\n      result[n] = arr[x in taken ? taken[x] : x];\n      taken[x] = --len in taken ? taken[len] : len;\n    }\n    return result;\n  }\n\n  onResetClick = () => {\n    this.setState({\n      countries: this.state.history,\n      capitalCity: \"\",\n      options: [],\n      answer: null,\n      score: 0,\n      countryInfo: null,\n    });\n    this.setCountries();\n  };\n\n  onAudioClick = () => {\n    this.setState({\n      audio: !this.state.audio,\n    });\n  };\n\n  render() {\n    if (!this.state.countryInfo) {\n      return <LoadingScreen />;\n    }\n\n    let resetButton = (\n      <div\n        className='ui right floated secondary animated button resetButton'\n        onClick={this.onResetClick}\n        tabIndex='0'\n      >\n        <div className='visible content'>Reset</div>\n        <div className='hidden content'>\n          <i className='undo alternate icon'></i>\n        </div>\n      </div>\n    );\n\n    let audioButton;\n    if (this.state.audio) {\n      audioButton = (\n        <button\n          className='positive ui right floated button audioButton'\n          onClick={this.onAudioClick}\n        >\n          Audio On\n        </button>\n      );\n    } else {\n      audioButton = (\n        <button\n          className='negative ui right floated button audioButton'\n          onClick={this.onAudioClick}\n        >\n          Audio Off\n        </button>\n      );\n    }\n\n    return (\n      <div className='ui container game'>\n        <div className='three ui buttons buttons-container'>\n          {audioButton}\n          <button\n            className='ui primary icon button'\n            onClick={this.props.onHomeClick}\n          >\n            <i className='home icon'></i>\n          </button>\n          {resetButton}\n        </div>\n        <Map info={this.state.countryInfo} city={this.state.capitalCity} />\n        <div className='ui centered huge header capital-city noselect'>\n          {this.state.capitalCity}\n        </div>\n        <div className='ui score huge header noselect'>\n          Score: {this.state.score}{\" \"}\n          {this.state.total !== 0 ? `out of ${this.state.total}` : \"\"}{\" \"}\n        </div>\n        <CountryList\n          countries={this.state.options}\n          onCountryClick={this.onCountryClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import './App.css';\nimport React from 'react';\nimport Game from './Game.js';\n\nclass App extends React.Component {\n  state = { running: false };\n\n  onHomeClick = () => {\n    this.setState({ running: false });\n  };\n\n  render() {\n    if (this.state.running) {\n      return <Game onHomeClick={this.onHomeClick} />;\n    }\n\n    return (\n      <div className=\"home-container\">\n        <div className=\"title\">\n          <h1>Countries and Capitals</h1>\n          <p>Choose which country the capital city belongs</p>\n          <button\n            className=\"ui start-button primary button\"\n            onClick={() => this.setState({ running: true })}\n          >\n            Start\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}