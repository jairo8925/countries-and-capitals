{"version":3,"sources":["apis/countries.js","components/CountryItem.js","components/CountryList.js","components/Map.js","components/LoadingScreen.js","sounds/correct.wav","sounds/wrong.wav","components/Game.js","components/App.js","index.js"],"names":["axios","create","baseURL","CountryItem","country","onCountryClick","option","className","onClick","name","alt","src","flag","CountryList","countries","Map","info","population","Number","toLocaleString","lat","latlng","long","region","subregion","languages","map","i","join","currencies","useState","setMap","flyTo","MapContainer","center","zoom","whenCreated","doubleClickZoom","touchZoom","zoomSnap","zoomDelta","trackResize","scrollWheelZoom","dragging","TileLayer","url","attribution","Marker","position","keepInView","Tooltip","permanent","LoadingScreen","props","message","defaultProps","Game","state","capitalCity","options","answer","score","countryInfo","total","Audio","correctSoundEffect","play","audio","wrongSoundEffect","volume","setState","setCountries","chooseCountries","Math","floor","random","length","capital","index","indexOf","splice","a","countriesService","get","params","fields","response","toDelete","Set","data","filter","obj","has","console","log","this","item","arr","n","result","Array","len","taken","RangeError","x","style","paddingTop","city","React","Component","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.794e3b48.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://restcountries.eu/rest/v2',\n});\n","import './CountryItem.css';\nimport React from 'react';\n\nconst CountryItem = ({ country, onCountryClick, option }) => {\n  return (\n    <div className=\"eight wide column center aligned\">\n      <div\n        className=\"ui huge segment country noselect\"\n        onClick={() => onCountryClick(option)}\n      >\n        {country.name}\n        <img\n          className=\"flag\"\n          alt={`Flag of ${country.name}`}\n          src={country.flag}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CountryItem;\n","import React from 'react';\nimport CountryItem from './CountryItem';\n\nconst CountryList = ({ countries, onCountryClick }) => {\n  return (\n    <div className=\"ui two centered grid\">\n      <div className=\"sixteen column centered row\">\n        <CountryItem\n          country={countries[0]}\n          onCountryClick={onCountryClick}\n          option={0}\n        />\n        <CountryItem\n          country={countries[1]}\n          onCountryClick={onCountryClick}\n          option={1}\n        />\n      </div>\n      <div className=\"sixteen column centered row\">\n        <CountryItem\n          country={countries[2]}\n          onCountryClick={onCountryClick}\n          option={2}\n        />\n        <CountryItem\n          country={countries[3]}\n          onCountryClick={onCountryClick}\n          option={3}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CountryList;\n","import \"./Map.css\";\nimport React, { useState } from \"react\";\nimport { MapContainer, Marker, Tooltip, TileLayer } from \"react-leaflet\";\n\nconst Map = ({ info }) => {\n  const population = Number(info.population).toLocaleString();\n  const lat = Number(info.latlng[0]);\n  const long = Number(info.latlng[1]);\n  const region = info.subregion;\n  const languages = info.languages\n    .map((i) => {\n      return i.name;\n    })\n    .join(\", \");\n  const currencies = info.currencies\n    .map((i) => {\n      return i.name;\n    })\n    .join(\", \");\n\n  const url = \"https://tiles.wmflabs.org/osm-no-labels/{z}/{x}/{y}.png\";\n\n  const [map, setMap] = useState(null);\n  if (map) {\n    map.flyTo([lat, long], 3);\n  }\n\n  return (\n    <MapContainer\n      center={[lat, long]}\n      zoom={3}\n      whenCreated={setMap}\n      doubleClickZoom={false}\n      touchZoom={false}\n      zoomSnap={false}\n      zoomDelta={false}\n      trackResize={false}\n      scrollWheelZoom={false}\n      dragging={false}\n    >\n      <TileLayer\n        url={url}\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <Marker position={[lat, long]} keepInView={true}>\n        <Tooltip className='info' permanent>\n          <p>\n            <b>Population:</b> {population}\n          </p>\n          <p>\n            <b>Region:</b> {region}\n          </p>\n          <p>\n            <b>Languages:</b> {languages}\n          </p>\n          <p>\n            <b>Currencies:</b> {currencies}\n          </p>\n        </Tooltip>\n      </Marker>\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import React from 'react';\n\nconst LoadingScreen = (props) => {\n  return (\n    <div className=\"ui active\">\n      <div className=\"ui big text loader\">{props.message}</div>\n    </div>\n  );\n};\n\nLoadingScreen.defaultProps = {\n  message: 'Loading...',\n};\n\nexport default LoadingScreen;\n","export default __webpack_public_path__ + \"static/media/correct.87ab3071.wav\";","export default __webpack_public_path__ + \"static/media/wrong.9ed0fe46.wav\";","import \"./Game.css\";\nimport React from \"react\";\nimport countriesService from \"../apis/countries\";\nimport CountryList from \"./CountryList\";\nimport Map from \"./Map\";\nimport LoadingScreen from \"./LoadingScreen\";\nimport correctSoundEffect from \"../sounds/correct.wav\";\nimport wrongSoundEffect from \"../sounds/wrong.wav\";\n\nclass Game extends React.Component {\n  state = {\n    capitalCity: \"\",\n    countries: [],\n    options: [],\n    answer: null,\n    score: 0,\n    countryInfo: null,\n    total: 0,\n  };\n\n  async componentDidMount() {\n    const response = await countriesService.get(\"/all\", {\n      params: {\n        fields:\n          \"name;capital;flag;languages;population;latlng;subregion;currencies\",\n      },\n    });\n\n    const toDelete = new Set([\"Holy See\"]);\n    response.data = response.data.filter((obj) => !toDelete.has(obj.name));\n    console.log(response.data);\n\n    this.setState({\n      countries: response.data.filter((item) => {\n        return item.capital.length !== 0;\n      }),\n    });\n\n    this.setCountries();\n  }\n\n  onCountryClick = (answer) => {\n    let score = this.state.score;\n    if (answer === this.state.answer) {\n      // play correct answer sound\n      new Audio(correctSoundEffect).play();\n      score++;\n    } else {\n      // play wrong answer sound\n      const audio = new Audio(wrongSoundEffect);\n      audio.volume = 0.25;\n      audio.play();\n    }\n\n    this.setState({\n      score,\n      total: this.state.total + 1,\n    });\n\n    this.setCountries();\n  };\n\n  setCountries = () => {\n    const options = this.chooseCountries(this.state.countries, 4);\n    const answer = Math.floor(Math.random() * options.length);\n    const capitalCity = options[answer].capital;\n\n    let countries = this.state.countries;\n    if (this.state.countries.length > 4) {\n      const index = countries.indexOf(options[answer]);\n      countries.splice(index, 1);\n    }\n\n    const countryInfo = options[answer];\n\n    this.setState({\n      countryInfo,\n      countries,\n      capitalCity,\n      answer,\n      options,\n    });\n  };\n\n  chooseCountries(arr, n) {\n    let result = new Array(n),\n      len = arr.length,\n      taken = new Array(len);\n    if (n > len)\n      throw new RangeError(\n        \"chooseCountries: more elements taken than available\"\n      );\n    while (n--) {\n      let x = Math.floor(Math.random() * len);\n      result[n] = arr[x in taken ? taken[x] : x];\n      taken[x] = --len in taken ? taken[len] : len;\n    }\n    return result;\n  }\n\n  render() {\n    if (!this.state.countryInfo) {\n      return <LoadingScreen />;\n    }\n\n    return (\n      <div className='ui container' style={{ paddingTop: \"50px\" }}>\n        <div className='ui centered huge header capitalCity noselect'>\n          {this.state.capitalCity}\n        </div>\n        <Map info={this.state.countryInfo} city={this.state.capitalCity} />\n        <div className='ui huge header score noselect'>\n          Score: {this.state.score}{\" \"}\n          {this.state.total !== 0 ? `/ ${this.state.total}` : \"\"}\n        </div>\n        <CountryList\n          countries={this.state.options}\n          onCountryClick={this.onCountryClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './Game.js';\n\nclass App extends React.Component {\n  render() {\n    return <Game />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}